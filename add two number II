/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        l1=reverse(l1);
        l2=reverse(l2);

        int sum=0;
        int carry=0;
        ListNode node=new ListNode();

        while(l1!=null||l2!=null)
        {
            if(l1!=null)
            {
                sum+=l1.val;

            }
            if(l2!=null)
            {
                sum+=l2.val;
            }

            node.val=sum%10;
            carry=sum/10;

            ListNode temp=new ListNode(carry);
            sum=carry;
            temp.next=node;
            node=temp;

            l1=l1!=null?l1.next:null;
            l2=l2!=null?l2.next:null;
        }
        return carry==0?node.next:node;
        
    }
    public ListNode reverse(ListNode head)
    {
        ListNode curr=head;
        ListNode prev=null;
        ListNode next;

        while(curr!=null)
        {
            next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
        }
        return prev;

    }
}
